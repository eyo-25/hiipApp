{"version":3,"file":"static/js/156.0c74ca0f.chunk.js","mappings":"2QAmGA,UApFiB,SAAH,GAA6C,IAAvCA,EAAK,EAALA,MAAOC,EAAQ,EAARA,SACzB,GAA4BC,EAAAA,EAAAA,IAAeC,EAAAA,IAAU,eAAtCC,GAAF,KAAW,MACxB,GAA8CC,EAAAA,EAAAA,MAAtCC,EAAQ,EAARA,SAAUC,EAAY,EAAZA,aAAcC,EAAS,EAATA,UAI1BC,EAAO,yCAAG,6FAGwB,GAFhCC,EAAQF,EAAU,SAClBG,EAAWH,EAAU,YACrBI,EAAWJ,EAAU,YAAY,EAAD,QAEhCP,EAAS,CAAD,gBACM,OAAhBG,GAAU,GAAM,SACVS,EAAAA,GAAAA,OAEHC,+BAA+BJ,EAAOC,GACtCI,MAAK,SAACC,GACLA,EAAOC,KAAKC,cAAc,CACxBC,YAAaP,IAEfQ,EAAAA,GAAAA,WAAqB,QAAQC,IAAIL,EAAOC,KAAKK,KAAKC,IAAI,CACpDb,MAAOA,EACPE,SAAUA,EACVY,SACE,uIACFF,IAAKN,EAAOC,KAAKK,KAErB,IACCP,MAAK,kBAAMX,GAAU,EAAM,IAAE,KAAD,EAC/BJ,GAAM,GAAO,wBAEG,OAAhBI,GAAU,GAAM,WACVqB,EAAAA,EAAAA,IAA2BC,EAAAA,GAAahB,EAAOC,GAAUI,MAC7D,kBAAMX,GAAU,EAAM,IACtB,KAAD,qDAGHuB,MAAM,mHAAyB,0DAElC,kBAjCY,mCAkCb,OACE,SAACC,EAAO,WACN,SAACC,EAAS,WACR,UAACC,EAAM,YACL,SAACC,EAAQ,UACN9B,GACC,UAAC+B,EAAO,YACN,SAACC,EAAQ,IAAG,2EAId,UAACD,EAAO,YACN,SAACC,EAAQ,IAAG,8CAIlB,UAACC,EAAO,CAACC,SAAU5B,EAAaE,GAAS,WACvC,oCACMH,EAAS,QAAS,CAAE8B,UAAU,KAAO,IACzCC,KAAK,QACLC,YAAY,iDAEd,oCACMhC,EAAS,WAAY,CAAE8B,UAAU,KAAO,IAC5CC,KAAK,WACLE,aAAa,KACbD,YAAY,mDAEbrC,IACC,oCACMK,EAAS,WAAY,CAAE8B,UAAU,KAAO,IAC5CC,KAAK,OACLC,YAAY,oDAGhB,4BAASrC,EAAW,gBAAkB,cAExC,SAACuC,EAAQ,CAACC,QA1EC,WACjBzC,GAAM,EACR,EAwEsC,0BAKxC,EAIA,IAAM4B,EAAUc,EAAAA,GAAAA,IAAU,mMAWpBb,EAAYa,EAAAA,GAAAA,IAAU,uFAMtBZ,EAASY,EAAAA,GAAAA,IAAU,oFAMnBV,EAAUU,EAAAA,GAAAA,IAAU,+GAOpBT,GAAWS,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,CAAgB,gFAM3BR,EAAUQ,EAAAA,GAAAA,KAAW,4mBAWHE,EAAAA,GAgBTC,EAAAA,GAKTd,EAAWW,EAAAA,GAAAA,GAAS,kHAOpBF,EAAWE,EAAAA,GAAAA,OAAa,4TASRE,EAAAA,G","sources":["Pages/Auth/AuthForm/AuthForm.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { useState } from \"react\";\r\nimport { authService, dbService, firebaseInstance } from \"../../../firebase\";\r\nimport { ReactComponent as HiipIcon } from \"../../../Assets/Icons/HIIPLogo.svg\";\r\nimport { Dark_Gray, Dark_Gray2 } from \"../../../Styles/Colors\";\r\nimport { loadState } from \"../../../Recoil/atoms\";\r\nimport { useRecoilState } from \"recoil\";\r\n\r\ninterface IAuthFormProps {\r\n  newCount: boolean;\r\n  close: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst AuthForm = ({ close, newCount }: IAuthFormProps) => {\r\n  const [isLoad, setIsLoad] = useRecoilState(loadState);\r\n  const { register, handleSubmit, getValues } = useForm();\r\n  const closeClick = () => {\r\n    close(false);\r\n  };\r\n  const onValid = async () => {\r\n    const email = getValues(\"email\");\r\n    const password = getValues(\"password\");\r\n    const nickname = getValues(\"nickname\");\r\n    try {\r\n      if (newCount) {\r\n        setIsLoad(true);\r\n        await firebaseInstance\r\n          .auth()\r\n          .createUserWithEmailAndPassword(email, password)\r\n          .then((result: any) => {\r\n            result.user.updateProfile({\r\n              displayName: nickname,\r\n            });\r\n            dbService.collection(\"user\").doc(result.user.uid).set({\r\n              email: email,\r\n              nickname: nickname,\r\n              photoURL:\r\n                \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS_qBTDzBVonLHd5Ejk0i-61YlcHI54KTgOMhIRea9jwACihT9hxQaj2P87_XAv87DEkAY&usqp=CAU\",\r\n              uid: result.user.uid,\r\n            });\r\n          })\r\n          .then(() => setIsLoad(false));\r\n        close(false);\r\n      } else {\r\n        setIsLoad(true);\r\n        await signInWithEmailAndPassword(authService, email, password).then(\r\n          () => setIsLoad(false)\r\n        );\r\n      }\r\n    } catch (error: any) {\r\n      alert(\"아이디와 비밀번호를 정확히 입력해주세요\");\r\n    }\r\n  };\r\n  return (\r\n    <Overlay>\r\n      <Container>\r\n        <BigBox>\r\n          <BigTitle>\r\n            {newCount ? (\r\n              <LogoBox>\r\n                <HiipLogo />\r\n                계정을 만들어 참여하세요\r\n              </LogoBox>\r\n            ) : (\r\n              <LogoBox>\r\n                <HiipLogo />에 로그인하기\r\n              </LogoBox>\r\n            )}\r\n          </BigTitle>\r\n          <BigForm onSubmit={handleSubmit(onValid)}>\r\n            <input\r\n              {...register(\"email\", { required: true })}\r\n              type=\"email\"\r\n              placeholder=\"Email을 적어주세요\"\r\n            />\r\n            <input\r\n              {...register(\"password\", { required: true })}\r\n              type=\"password\"\r\n              autoComplete=\"on\"\r\n              placeholder=\"Password를 적어주세요\"\r\n            />\r\n            {newCount && (\r\n              <input\r\n                {...register(\"nickname\", { required: true })}\r\n                type=\"text\"\r\n                placeholder=\"NickName을 적어주세요\"\r\n              />\r\n            )}\r\n            <button>{newCount ? \"Creat Account\" : \"LogIn\"}</button>\r\n          </BigForm>\r\n          <CloseBtn onClick={closeClick}>Cancle</CloseBtn>\r\n        </BigBox>\r\n      </Container>\r\n    </Overlay>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n\r\nconst Overlay = styled.div`\r\n  display: flex;\r\n  position: absolute;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100vh;\r\n  background-color: white;\r\n  z-index: 12;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 375px;\r\n`;\r\n\r\nconst BigBox = styled.div`\r\n  display: flex;\r\n  width: 80%;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst LogoBox = styled.div`\r\n  display: flex;\r\n  height: 40px;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst HiipLogo = styled(HiipIcon)`\r\n  display: flex;\r\n  width: 50px;\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst BigForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  input {\r\n    cursor: pointer;\r\n    display: flex;\r\n    text-align: center;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100%;\r\n    height: 40px;\r\n    border: 1px solid ${Dark_Gray};\r\n    margin-bottom: 10px;\r\n  }\r\n  button {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100%;\r\n    height: 40px;\r\n    border-radius: 20px;\r\n    cursor: pointer;\r\n    margin: 10px 0;\r\n    background-color: black;\r\n    color: white;\r\n    &:hover {\r\n      transition: 0.5s ease-in;\r\n      color: ${Dark_Gray2};\r\n    }\r\n  }\r\n`;\r\n\r\nconst BigTitle = styled.h4`\r\n  font-size: 21px;\r\n  font-weight: 600;\r\n  letter-spacing: -1px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst CloseBtn = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 40px;\r\n  border-radius: 20px;\r\n  background-color: white;\r\n  cursor: pointer;\r\n  border: 1px solid ${Dark_Gray};\r\n  &:hover {\r\n    transition: 0.5s ease-in;\r\n    background-color: rgba(0, 0, 0, 0.1);\r\n  }\r\n`;\r\n"],"names":["close","newCount","useRecoilState","loadState","setIsLoad","useForm","register","handleSubmit","getValues","onValid","email","password","nickname","firebaseInstance","createUserWithEmailAndPassword","then","result","user","updateProfile","displayName","dbService","doc","uid","set","photoURL","signInWithEmailAndPassword","authService","alert","Overlay","Container","BigBox","BigTitle","LogoBox","HiipLogo","BigForm","onSubmit","required","type","placeholder","autoComplete","CloseBtn","onClick","styled","HiipIcon","Dark_Gray","Dark_Gray2"],"sourceRoot":""}